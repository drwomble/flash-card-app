{"ast":null,"code":"var _jsxFileName = \"/home/drwomble/Development/code/projects/study-cards/src/Form.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Form(_ref) {\n  _s();\n  let {\n    handleForm\n  } = _ref;\n  //set state variables for the new questions and answers\n  const [question, setQuestion] = useState('');\n  const [answer, setAnswer] = useState('');\n  //create handle submit function that posts the new card\n  const handleSubmit = e => {\n    //don't forget preventDefault it's a must when dealing with forms\n    e.preventDefault();\n    //create an object to structure the cards added\n    //don't worry about the id it gets handled automagically\n    const newCardObject = {\n      question: question,\n      answer: answer\n    };\n    fetch('http://localhost:3001/questions', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newCardObject)\n    }).then(response => response.json()).then(data => handleForm(data));\n  };\n  //create a function to clear the form\n  const resetForm = () => {\n    setQuestion('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form\",\n    onSubmit: handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Enter question\",\n        onChange: e => setQuestion(e.target.value),\n        value: question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Enter answer\",\n        onChange: e => setAnswer(e.target.value),\n        value: answer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"add your flashcard to the list\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n_s(Form, \"z//ctU94R2UzDKliEZDQnqFHB00=\");\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","Form","_ref","_s","handleForm","question","setQuestion","answer","setAnswer","handleSubmit","e","preventDefault","newCardObject","fetch","method","headers","body","JSON","stringify","then","response","json","data","resetForm","className","onSubmit","children","placeholder","onChange","target","value","fileName","_jsxFileName","lineNumber","columnNumber","type","_c","$RefreshReg$"],"sources":["/home/drwomble/Development/code/projects/study-cards/src/Form.js"],"sourcesContent":["import { useState, useEffect } from 'react'\n\nfunction Form ({ handleForm }) {\n    //set state variables for the new questions and answers\n    const [question, setQuestion] = useState('')\n    const [answer, setAnswer] = useState('')\n    //create handle submit function that posts the new card\n    const handleSubmit = (e) => {\n        //don't forget preventDefault it's a must when dealing with forms\n        e.preventDefault()\n        //create an object to structure the cards added\n        //don't worry about the id it gets handled automagically\n        const newCardObject = {\n            question : question,\n            answer : answer \n        }\n        fetch('http://localhost:3001/questions', {\n            method: 'POST',\n            headers: {\n                'Content-Type' : 'application/json'\n            },\n            body : JSON.stringify(newCardObject)\n        })\n        .then(response => response.json())\n        .then(data => handleForm(data))\n    }\n    //create a function to clear the form\n    const resetForm = () => {\n        setQuestion('')\n    }\n\n    return (\n        <div className='form' onSubmit={handleSubmit}>\n            <form>\n                <input \n                placeholder='Enter question'\n                onChange={(e) => setQuestion(e.target.value)} \n                value={question} \n                />\n                <input \n                placeholder='Enter answer'\n                onChange={(e) => setAnswer(e.target.value)} \n                value={answer}\n                />\n                <input type='submit' value='add your flashcard to the list' />\n            </form>\n        </div>\n    )\n}\nexport default Form"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3C,SAASC,IAAIA,CAAAC,IAAA,EAAkB;EAAAC,EAAA;EAAA,IAAhB;IAAEC;EAAW,CAAC,GAAAF,IAAA;EACzB;EACA,MAAM,CAACG,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACxC;EACA,MAAMY,YAAY,GAAIC,CAAC,IAAK;IACxB;IACAA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB;IACA;IACA,MAAMC,aAAa,GAAG;MAClBP,QAAQ,EAAGA,QAAQ;MACnBE,MAAM,EAAGA;IACb,CAAC;IACDM,KAAK,CAAC,iCAAiC,EAAE;MACrCC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAG;MACrB,CAAC;MACDC,IAAI,EAAGC,IAAI,CAACC,SAAS,CAACN,aAAa;IACvC,CAAC,CAAC,CACDO,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIlB,UAAU,CAACkB,IAAI,CAAC,CAAC;EACnC,CAAC;EACD;EACA,MAAMC,SAAS,GAAGA,CAAA,KAAM;IACpBjB,WAAW,CAAC,EAAE,CAAC;EACnB,CAAC;EAED,oBACIN,OAAA;IAAKwB,SAAS,EAAC,MAAM;IAACC,QAAQ,EAAEhB,YAAa;IAAAiB,QAAA,eACzC1B,OAAA;MAAA0B,QAAA,gBACI1B,OAAA;QACA2B,WAAW,EAAC,gBAAgB;QAC5BC,QAAQ,EAAGlB,CAAC,IAAKJ,WAAW,CAACI,CAAC,CAACmB,MAAM,CAACC,KAAK,CAAE;QAC7CA,KAAK,EAAEzB;MAAS;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACf,CAAC,eACFlC,OAAA;QACA2B,WAAW,EAAC,cAAc;QAC1BC,QAAQ,EAAGlB,CAAC,IAAKF,SAAS,CAACE,CAAC,CAACmB,MAAM,CAACC,KAAK,CAAE;QAC3CA,KAAK,EAAEvB;MAAO;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACb,CAAC,eACFlC,OAAA;QAAOmC,IAAI,EAAC,QAAQ;QAACL,KAAK,EAAC;MAAgC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5D;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEd;AAAC/B,EAAA,CA9CQF,IAAI;AAAAmC,EAAA,GAAJnC,IAAI;AA+Cb,eAAeA,IAAI;AAAA,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}